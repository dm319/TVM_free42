;-----------------------------------------------------------------------------
; #  | N  | I%YR | PV | PMT   | FV | P/YR | End ||   TVM v9    |   Plus42    |
;----|----|------|----|-------|----|------|-----||-------------|-------------|
; 01 | ?  |  5%  | 1M | -5k   | 0  |  12  | yes ||    430.9175 |    430.9175 |
; 02 | ?  |  5%  | 1M | -2000 | 0  |  12  | no  ||    425.9790 |    425.9790 |
; 03 | 1k |  ?   | 1M | -2000 | 0  |  12  | yes ||      1.9113 |      1.9113 |
; 04 | 1k |  ?   | 1M | -2000 | 0  |  12  | no  ||      1.9164 |      1.9164 |
; 05 | 1k |  5%  | ?  | -2000 | 0  |  12  | yes || 472493.4501 | 472493.4501 |
; 06 | 1k |  5%  | ?  | -2000 | 0  |  12  | no  || 474462.1728 | 472493.4501 |
; 07 | 1k |  5%  | 1M | ?     | 0  |  12  | yes ||  -4232.8629 |  -4232.8629 |
; 08 | 1k |  5%  | 1M | ?     | 0  |  12  | no  ||  -4215.2992 |  -4215.2992 |
;-----------------------------------------------------------------------------

; Original test cases:
;------------------------------------------------------------------------------------------------------
; #  | N            | I%YR      | PV       | PMT          | FV        | P/YR | End || TVM v9 | Plus42 |
;----|--------------|-----------|----------|--------------|-----------|------|-----||--------|--------|
; 1  | 38 x 12      | 5.25%     | 270'000  | ?            | 0         | 12   | yes ||  34    |  34    |
; 1b | 38 x 12      | ?         | 270'000  | -14'584/12   | 0         | 12   | yes ||  33.1  |  33.1  |
; 2  | 360          | 15% → 12% | 100'000  | ?-?          | 0         | 12   | yes ||  33.2  |  32.4  |
; 3  | 60x60x24x365 | 10%       | 0        | -0.01        | ?         | =N   | yes ||  32.7  |  33.7  |
; 4  | 480          | 0 → ?     | 100'000  | ?→ PMT       | 0         | 12   | yes ||  Inf   |  Inf   |
; 5  | 10           | ?         | 50       | -30          | 400       | 1    | yes ||  32.3  |  31.8  |
; 6  | 10           | ?         | 50       | -30          | 80        | 1    | yes ||  32.5  |  32.3  |
; 7  | 10           | ?         | -100     | 10           | 1e-10     | 12   | yes ||  31.1  |  31.4  |
; 8  | 32           | ?         | -999'999 | 0            | 1e6       | 1    | yes ||  39.2  |  35.5  |
; 9  | ?            | 25        | 100000   | -2083.333334 | 0         | 12   | yes ||  33.4  |  29.8  |
; 10 | ?            | 25        | 100000   | -2040.816327 | 0         | 12   | no  ||  33.4  |  30.3  |
; 11 | 60x24x365    | 1/6% → ?  | 0        | -0.01        | ?→ FV     | =N   | yes ||  28.6  |  31    |
; 12 | 40           | ? → I%YR  | 900      | -400         | -1000 → ? | 1    | no  ||  Inf   |  23.7  |
;------------------------------------------------------------------------------------------------------

; FLAG 00  0 → Nothing   is returned (default)
;          1 → Something is returned. Used by N, I%YR, PV, PMT, FV, →AER
; FLAG 01  Used for temporary purposes 
; "p"      0 → End_Mode,   use TVM menu (which shows "START" & "END•")
;          1 → Start_Mode, use MENU2    (which shows "STAR•" & "END")

; On a first run, Plus42 doesn't need FV entered to do #1, Duncan's program does. I changed that. 

; Plus42's menus stay at their level and only change via the up/down buttons. Different for :TVM
; Plus42 doesn't AVIEW anything when you do CLEAR, this program does.
; Plus42 uses BEGIN, :TVM uses START  ???
; Could we make a SHOW TVM so you can see ALL the 5 primary numbers? (only practical in Plus42)
; Made LOCAL variables for: den, num, k, y, f0, f, g, pv, fv, fpp, fp2, eps, a, b, c, d
; In Plus42, if you change modes then you can't recalculate a variable with one press. You can here :-) 

; Darn it - this will cause trouble, it also requires Free42 3.0...
; NOTE: In Free42 (but not in Plus42), Allow Big Stack (NSTK) mode must be turned on
;       in the Preferences in order to use the NSTK or LNSTK functions. If not, you
;       will get the Big Stack Disabled error message when trying to use them.

; Add in LOCK as a program step
; Many expensive DROP commands done vs judiciously using CLX
; Changed local labels for everything except the untouched I%YR stuff to uppercase A-F (local Alpha Labels)
; Changed my CONSTANTS program to use local Alpha Labels a-e
; "I%YR" is the only function that still uses LNSTK
; Fixed: PMT had a bug in the formula for START mode when i≠0
; There is no LBL "IYR?"  ???? What does it do?
; What does "→AER" do?
; Removed STO "RESET", "CLEAR", "START", "STAR•", "END" & "END•" because they are pointless,
; also removed (the original) FLAG 01 and merged everything into "p"
; Can I rename "p" to something else (unless it's already a standard variable name)
; This program clutters Free42 with global variables that may exist in other user programs :-( 
; Removed STO IND "var" & DROP before RTN in all MVAR routines that return a value
; Change Result VIEW to var→result vs var=result to distinguish it from an MVAR STO. Plus42 is super confusing. 

; ERROR HANDLING:
; Need to be robust against a consecutive press when all the necessary variables haven't been entered.
; Need to be robust against impossible solutions yielding an error.
; Should I fix the fact that this mangles LASTx?
; If the calculation for "I%YR" breaks you'll unexpectedly end up in NSTK mode :-( 
; Need to do more error checking e.g. for illegal non-real values 
; If you do a first run and stupidly just press "N" then you get "Nonexistent", however program 
; execution has stopped at the error so now even doing START or STOP is broken because the program pointer 
; is still in the same place that caused the error. Need a way to catch these silly errors.
; Plus42 gives you N=1 in this case. It also filters out N=0 as Invalid Data
; Filter for N not being an integer and <0, PV=FV (?), PMT=0 (?), existence of required variables per function,
; odd values in START and END (strictly speaking they shouldn't exist)

000▸LBL ":TVM" ; primary menu (START, END•) to indicate END mode
001 MVAR "N"
002 MVAR "I%YR"
003 MVAR "PV"
004 MVAR "PMT"
005 MVAR "FV"
006 MVAR "P/YR"
007 MVAR "START"
008 MVAR "END•"
009 MVAR "IYR?"
010 MVAR "→AER"
011 MVAR "RESET"
012 MVAR "CLEAR"
013 GTO  G
014▸LBL "MENU2" ; second menu (STAR•, END) to indicate begin mode
015 MVAR "N"
016 MVAR "I%YR"
017 MVAR "PV"
018 MVAR "PMT"
019 MVAR "FV"
020 MVAR "P/YR"
021 MVAR "STAR•"
022 MVAR "END"
023 MVAR "IYR?"
024 MVAR "→AER"
025 MVAR "RESET"
026 MVAR "CLEAR"

027 LBL G
028 XEQ "RESET"    ; Main initialization. Does NOT clear all variables.
;---;-----------------------------
029▸LBL A          ; MAIN RUN LOOP (doesn't harm the stack)
;---;-----------------------------
000 XEQ "P"        ; run print subroutine
041 FC?C 00
042 AVIEW          ; Show the TVM state if a menu variable wasn't solved.
043 CLA
044 VARMNU1 ":TVM"
045 0≠? "p"        ; select correct menu according to START or STOP mode
046 VARMNU1 "MENU2"
047 STOP 
;                  ; When a VARMENU key is pressed immediately following another, it 
;                  ; puts MVAR in the Alpha-register and does XEQ IND MVAR from here.
;                  ; In all other cases, it performs STO IND MVAR and a VIEW IND MVAR
;                  ; and doesn't advance the program pointer. This allows dumb things   
;                  ; like storing values in START or END without setting the mode :-( 
058 ASTO "var"     ; A consecutive press occurred, MVAR placed in X
059 XEQ IND "var"  ; XEQ the menu variable. X contains the result if a calculation was done.
060 FC? 00         ; Check if nothing was placed in X 
061 GTO A          ; Nothing was returned
062 STO IND "var"  ; Something was returned: save and view it
063 ├":"           ; Use ":" vs "=" to distinguish between MVAR store and MVAR result
064 ARCL ST X
065 AVIEW
066 GTO A
;---;--------------------------------------------------------------------------------------------
000 LBL "P"        ; creat alpha display
;---;--------------------------------------------------------------------------------------------
000 FUNC 00
031 "P/YR="        ; print alpha display. show #payments/year and start/end mode.
032 CLX
033 RCL "P/YR"     ; payments/year (and temporarily save X-register in "P/YR")
034 AIP            ; append the integer part of X to the alpha register 
035 0=? "p"
036 ├", END mode"
037 0≠? "p"
038 ├", START mode"
000 RTN

;---;--------------------------------------------------------------------------------------------
067▸LBL "RESET" ; TVM INITIALIZATION,  p=0 (END mode), FV=IYR?=RESET=0, P/YR=12
;   ; Leaves the stack untouched
;   ; Merged old LBL 01 and RESET
;   ; ??? I also changed this to do FV=0 (consistent with Plus42 I think)
;---;--------------------------------------------------------------------------------------------
068 FUNC 00
069 12
070 STO "P/YR"   ; Set Payments/Yr to 12
071 CLX
072 STO "FV"     ; Set FV=0
073 STO "IYR?"   ; Set IYR?=0
074 STO "p"
075 RTN
;---;--------------------------------------------------------------------------------------------
076▸LBL "CLEAR"  ; clear all variables and SF 00. Leaves the stack untouched
;---;--------------------------------------------------------------------------------------------
077 FUNC 00
078 0
079 STO "PV"
080 STO "PMT"
081 STO "FV"
082 STO "I%YR"
083 STO "IYR?"
084 STO "N"
085 RTN
;---;--------------------------------------------------------------------------------------------
086▸LBL "START"
087▸LBL "STAR•"  ; Start mode ("p"=1)
;---;--------------------------------------------------------------------------------------------
088 STO "p"      ; save X-register
089 CLX
090 1
091 X<> "p"      ; Set p=1 for START mode and restore X-register
092 RTN
;---;--------------------------------------------------------------------------------------------
093▸LBL "END" 
094▸LBL "END•"   ; End mode ("p"=0)
;---;--------------------------------------------------------------------------------------------
095 STO "p"      ; save X-register
096 CLX
097 X<> "p"      ; Set p=0 for END mode and restore X-register
098 RTN
;---;--------------------------------------------------------------------------------------------
099▸LBL "P/YR" ; ??? Why is this needed?
;---;--------------------------------------------------------------------------------------------
100 STO "P/YR"
101 RTN
;---;--------------------------------------------------------------------------------------------
102▸LBL "N"    ; Solve for N (for i=0 & i≠0) (+2)
;---;--------------------------------------------------------------------------------------------
103 FUNC 01
104 SF 00      ; To signify this routine returns an answer in X
105 CF 01      ; Do NOT calculate "F" (which requires "N") within XEQ I
106 XEQ I      ; creates "i" and leaves it in X 
107 X=0?
108 GTO B      ; <---- Calculate N(i=0)  -(PV+FV)/PMT
109 1/X        ; <---- Calculate N(i≠0)  -ln[(PMT*(p+1/i)+PV)/(PMT*(p+1/i)-FV)]/ln(1+i)
110 RCL+ "p"   ; Optimized the way this formula was calculated
111 RCL× "PMT"
112 ENTER
113 RCL+ "PV"
114 X<>Y
115 RCL- "FV"
116 ÷
117 LN
118 RCL "i"
119 LN1+X
120 ÷
121 +/-
122 RTN
123▸LBL B      ; <---- Calculate N(i=0)
124 RCL "PV"
125 RCL+ "FV"
126 +/-
127 RCL÷ "PMT" ; This is the calculated value of N
128 RTN
;---;--------------------------------------------------------------------------------------------
129▸LBL "PV"   ; Solve for PV (for i=0 & i≠0)
;---;--------------------------------------------------------------------------------------------
130 FUNC 01
131 SF 00      ; To signify this routine returns an answer in X
132 SF 01      ; Calculate "F" within XEQ I
133 XEQ I      ; creates "i" & "F" and leaves "i" in X 
134 X=0?
135 GTO C      ; <---- Calculate PV(i=0)   -(FV+PMT*N)
136 1/X        ; <---- Calculate PV(i≠0)   [PMT*(p+1/i)*(1-F)-FV]/F
137 RCL+ "p"   ; Optimized the way this formula was calculated
138 RCL× "PMT"
139 1
140 RCL- "F"
141 ×
142 RCL- "FV"
143 RCL÷ "F"
144 RTN
145▸LBL C      ; <---- Calculate PV(i=0)
146 RCL "PMT"
147 RCL× "N"
148 RCL+ "FV"
149 +/-
150 RTN
;---;--------------------------------------------------------------------------------------------
151▸LBL "FV"   ; Solve for FV (for i=0 & i≠0)
;---;--------------------------------------------------------------------------------------------
152 FUNC 01
153 SF 00      ; To signify this routine returns an answer in X
154 SF 01      ; Calculate "F" within XEQ I
155 XEQ I      ; creates "i" & "F" and leaves "i" in X 
156 X=0?
157 GTO D      ; <---- Calculate FV(i=0)   -(PV+PMT*N)
158 1/X        ; <---- Calculate FV(i≠0)   PMT*(p+1/i)*(1-F)-PV*F    merged XEQ 22
159 RCL+ "p"   ; Optimized the way this formula was calculated
160 RCL× "PMT"
161 1
162 RCL- "F"
163 ×
164 RCL "PV"
165 RCL× "F"
166 -
167 RTN
168▸LBL D      ; <---- Calculate FV(i=0)
169 RCL "PMT"
170 RCL× "N"
171 RCL+ "PV"
172 +/-
173 RTN
;---;--------------------------------------------------------------------------------------------
174▸LBL "PMT"  ; Solve for PMT (for i=0 & i≠0)
;---;--------------------------------------------------------------------------------------------
175 FUNC 01
176 SF 00      ; To signify this routine returns an answer in X
177 SF 01      ; Calculate "F" within XEQ I
178 XEQ I      ; creates "i" & "F" and leaves "i" in X 
179 X=0?
180 GTO E      ; <---- Calculate PMT(i=0)   (FV-PV)/N
181 1/X        ; <---- Calculate PMT(i≠0)   (PV*F+FV)/(p+1/i)/(1-F)   merged LBL 19
182 RCL+ "p"   ; Optimized the way this formula was calculated
183 1
184 RCL- "F"
185 ×
186 RCL "PV"
187 RCL× "F"
188 RCL+ "FV"
189 X<>Y
190 ÷
191 RTN
192▸LBL E      ; <---- Calculate PMT(i=0)
193 RCL "FV"
194 RCL- "PV"
195 RCL÷ "N"
196 RTN
;---;--------------------------------------------------------------------------------------------
197▸LBL "→AER" ;  Calculates 100*((1+i)^"P/YR"-1)
;---;--------------------------------------------------------------------------------------------
198 FUNC 01
199 SF 00      ; To signify this routine returns an answer in X
200 CF 01      ; Do NOT calculate "F" (which requires "N") within XEQ I
201 XEQ I      ; Went this route vs calculating "i" in-place
202 1
203 +
204 RCL "P/YR"
205 Y↑X
206 1
207 -
208 100
209 ×
210 RTN
;---;--------------------------------------------------------------------------------------------
211▸LBL I   ; Calculates i = "I%YR"/100/"P/YR" and (optionally) F = (1+i)^N
;   ;       ; (+2), Returns with "i" in X) Called by N, FV, PV, PMT, →AER
;---;--------------------------------------------------------------------------------------------
212 RCL "P/YR"
213 1/X
214 RCL "I%YR"
215 %
216 STO "i"    ; i = "I%YR"/100/"P/YR"
217 FC? 01     ; Need to catch if "N" is defined for the RCL× "N" below
218 RTN
219 LN1+X
220 RCL× "N"   ; ??? BUG if calculating N, FV, PV or PMT when "N" isn't defined yet! 1st time run 
221 E↑X
222 STO "F"    ; F = e^(N*ln(1+i))  <---- ??? isn't this just (1+i)^N
223 RCL "i"    ; ??? Changed this to return "i" vs "I%YR"
224 RTN
;---;--------------------------------------------------------------------------------------------
225▸LBL "I%YR" ;  (for Start_mode & End_mode) Consumes LBLs 24-5, 41-2, 30-7
;---; Holy cow this is unbelievably complex! Consumes 10 local labels.
;---;--------------------------------------------------------------------------------------------
226 FUNC 01
227 LNSTK
228 SF 00      ; To signify this routine returns an answer in X
229 0=? "p"    ; (removed RCL "p", X=0?)
230 GTO 41     ; End mode
231 RCL "PV"   ; <---- Calculate I%YR(Start_mode)
232 RCL+ "PMT"
233 LSTO "pv"   ; pv = PV+PMT
234 RCL "FV"
235 RCL- "PMT"
236 LSTO "fv"   ; fv = FV-PMT
237 GTO 42
;---;-----------------------
238▸LBL 41     ; <---- Calculate I%YR(End_mode) - simply copy values
;---;-----------------------
239 RCL "FV"
240 LSTO "fv"
241 RCL "PV"
242 LSTO "pv"
;---;-----------------------
243▸LBL 42     ; referenced by 239
;---;-----------------------
244 0=? "IYR?" ; check if a guess has been input (removed RCL "IYR?", X=0?)
245 XEQ 24     ; if not, run interest rate guess
246 STO "I%YR" ; starting interest rate,  ??? another redundant calculation of "i"
247 RCL "P/YR"
248 1/X
249 %
250 STO "i"    ; starting i = "I%YR"/100/"P/YR"
251 CLX 
252 2
253 LSTO "g"    ; force at least 2 cycles of the loop
254 CLX
255 LSTO "f"
256 CLX        ; used to be DROP
;---;-----------------------
257▸LBL 30     ; start of Newton solve (adapted from plus42).
;              ; (+3) Spans LBLs 30-37. referenced by 380, 386, 400
;---;-----------------------
258 RCL "f"
259 LSTO "eps"
260 LSTO "f0"
261 CLX
262 RCL "i"
263 ENTER
264 ×          ; ??? why not just do x^2
265 1
266 +
267 1
268 X=Y?       ; check if i is very small by comparing 1 with 1+i^2
269 GTO 31     ; if so switch to Secant method (do people really care about this!?)
270 DROPN 2
271 RCL "i"
272 LN1+X
273 RCL× "N"
274 E↑X-1
275 RCL "i"
276 X<>Y
277 ÷
278 DUP
279 RCL "N"
280 ×
281 1
282 -
283 LSTO "y"
284 DROP
285 RCL "pv"
286 RCL+ "fv"
287 ×
288 LSTO "k"
289 RCL "pv"
290 RCL× "i"
291 +
292 RCL+ "PMT"
293 LSTO "f"
294 DROP
295 RCL "N"
296 1
297 -
298 RCL× "i"
299 RCL+ "y"
300 LSTO "num"
301 DROP
302 RCL "i"
303 ENTER
304 ×
305 RCL+ "i"
306 LSTO "den"  ; ??? only used 3 & 7 lines later (use the stack)
307 DROP
308 RCL "f"
309 RCL× "den"
310 RCL "k"
311 RCL× "num"
312 RCL "pv"
313 RCL× "den"
314 -
315 ÷
316 LSTO "eps"
317 RCL+ "i"
318 STO "i"
319 DROP
320 GTO 32     ; check success of iteration
;---;-----------------------
321▸LBL 31     ; The secant method. (+1) referenced by 271
;---;-----------------------
322 DROPN 2
323 RCL "pv"
324 RCL+ "fv"
325 RCL÷ "N"
326 LSTO "a"
327 DROP
328 RCL "pv"
329 RCL- "fv"
330 LSTO "b"
331 DROP
332 RCL "a"
333 RCL+ "b"
334 2
335 ÷
336 STO "fp"
337 DROP
338 RCL "N"
339 ENTER
340 ×
341 1
342 -
343 RCL× "a"
344 6
345 ÷
346 LSTO "fpp"   ; ??? only used once 8 lines later (use the stack)
347 DROP
348 RCL "fp"
349 RCL× "i"
350 RCL+ "PMT"
351 RCL+ "a"
352 LSTO "f"
353 DROP
354 RCL "fpp"
355 RCL× "i"
356 RCL+ "fp"
357 LSTO "fp2"   ; ??? only used once 4 lines later (use the stack)
358 DROP
359 RCL "f"
360 +/-
361 RCL÷ "fp2"
362 LSTO "eps"
363 RCL+ "i"
364 STO "i"
365 DROP
;---;-----------------------
366▸LBL 32     ; (+2) referenced by 322
;---;-----------------------
367 RCL "g"    ; forces at least two cycles of loop
368 X>0?
369 GTO 34
370 DROP       ; this used to be GTO 35 which was only called from here so I merged it
371 RCL "f0"
372 ABS
373 RCL "f"
374 ABS
375 X≥Y?       ; is guess worsening or same?
376 GTO 36
377 DROPN 2
378 GTO 30     ; return to start, going to 30 with nothing on the stack
;---;-----------------------
379▸LBL 34     ; Decrement "g" and GTO 30 (+1) referenced by 371  ??? there has to be a way to do DSE "g"
;---;-----------------------
380 1
381 -
382 LSTO "g"
383 DROP
384 GTO 30     ; going to 30 with nothing on the stack
;---;-----------------------
385▸LBL 36     ; referenced by 378
;---;-----------------------
386 DROPN 2
387 RCL "eps"
388 1000
389 ÷
390 RCL "i"
391 X<>Y
392 -
393 RCL "i"
394 X=Y?       ; break if good guess
395 GTO 37
396 DROPN 2    ; merged in LBL 38
397 RCL "i"
398 GTO 30     ; going to 30 with an item on the stack  ???? (as opposed to LBL 32,34)
;---;-----------------------
399▸LBL 37     ; referenced by 397
;---;-----------------------
400 DROPN 3
401 RCL "eps"
402 2
403 ÷
404 RCL "i"
405 X<>Y
406 -           ; last improvement to i solve post break.
407 RCL× "P/YR" ; i -> I%YR
408 100
409 ×
410 RTN
;---;-----------------------
411▸LBL 24     ; initial interest rate guess (via Albert Chan's code). Contains LBL 25. referenced by 247
;              ; Takes no inputs, returns a guess for I%YR
;---;-----------------------
412 RCL "fv"
413 RCL+ "pv"
414 RCL÷ "N"
415 LSTO "a"    ; a = (fv+pv)/N
416 RCL "fv"
417 RCL- "pv"
418 X<>Y
419 -
420 LSTO "b"    ; b = (fv-pv) - (fv+pv)/N
421 DROP
422 RCL "PMT"
423 RCL+ "a"
424 RCL÷ "b"
425 LSTO "c"    ; c = PMT+a+b   ??? only used once 9 lines later (use the stack)
426 RCL "N"
427 X↑2
428 RCL× "a"
429 ×
430 RCL÷ "b"
431 LSTO "d"    ; d = a/b*N^2   ??? only used once 4 lines later (use the stack)
432 3
433 -
434 RCL× "c"
435 RCL "d"
436 1.5
437 -
438 ÷
439 RCL× "P/YR" ; guess = "P/YR"*c*(d-3)/(d-1.5)     (one item added to the stack)
440 100
441 ×           ; guess = 100*"P/YR"*c*(d-3)/(d-1.5)     (one item added to the stack)
442 X>=0?       ; if guess is positive then return 
443 RTN
444 RCL "fv"    ; back up i guess (edge guess). referenced by 506 (was LBL 25)
445 RCL "pv"
446 ×           ; 2 items on the stack at this point
447 X≠0?        ; fv*pv = 0?
448 GTO 25
449 DROP 
450 RTN
451 LBL 25
452 DROPN 2     ; Y-register no longer needed.  
453 RCL "PMT"
454 RCL÷ "fv"
455 RCL "PMT"
456 +/-
457 RCL÷ "pv"
458 X>Y?        ; this can get cleaned up
459 X<>Y
460 CLX
461 100
462 ×
463 RTN
464 END
