;-----------------------------------------------------------------------------
; #  | N  | I%YR | PV | PMT   | FV | P/YR | End ||   TVM v9    |   Plus42    |
;----|----|------|----|-------|----|------|-----||-------------|-------------|
; 01 | ?  |  5%  | 1M | -5k   | 0  |  12  | yes ||    430.9175 |    430.9175 |
; 02 | ?  |  5%  | 1M | -5k   | 0  |  12  | no  ||    425.9790 |    425.9790 |
; 03 | 1k |  ?   | 1M | -2000 | 0  |  12  | yes ||      1.9113 |      1.9113 |
; 04 | 1k |  ?   | 1M | -2000 | 0  |  12  | no  ||      1.9164 |      1.9164 |
; 05 | 1k |  5%  | ?  | -2000 | 0  |  12  | yes || 472493.4501 | 472493.4501 |
; 06 | 1k |  5%  | ?  | -2000 | 0  |  12  | no  || 474462.1728 | 472493.4501 |
; 07 | 1k |  5%  | 1M | ?     | 0  |  12  | yes ||  -4232.8629 |  -4232.8629 |
; 08 | 1k |  5%  | 1M | ?     | 0  |  12  | no  ||  -4215.2992 |  -4215.2992 |
;-----------------------------------------------------------------------------

; Original test cases:
;------------------------------------------------------------------------------------------------------
; #  | N            | I%YR      | PV       | PMT          | FV        | P/YR | End || TVM v9 | Plus42 |
;----|--------------|-----------|----------|--------------|-----------|------|-----||--------|--------|
; 1  | 38 x 12      | 5.25%     | 270'000  | ?            | 0         | 12   | yes ||  34    |  34    |
; 1b | 38 x 12      | ?         | 270'000  | -14'584/12   | 0         | 12   | yes ||  33.1  |  33.1  |
; 2  | 360          | 15% → 12% | 100'000  | ?-?          | 0         | 12   | yes ||  33.2  |  32.4  |
; 3  | 60x60x24x365 | 10%       | 0        | -0.01        | ?         | =N   | yes ||  32.7  |  33.7  |
; 4  | 480          | 0 → ?     | 100'000  | ?→ PMT       | 0         | 12   | yes ||  Inf   |  Inf   |
; 5  | 10           | ?         | 50       | -30          | 400       | 1    | yes ||  32.3  |  31.8  |
; 6  | 10           | ?         | 50       | -30          | 80        | 1    | yes ||  32.5  |  32.3  |
; 7  | 10           | ?         | -100     | 10           | 1e-10     | 12   | yes ||  31.1  |  31.4  |
; 8  | 32           | ?         | -999'999 | 0            | 1e6       | 1    | yes ||  39.2  |  35.5  |
; 9  | ?            | 25        | 100000   | -2083.333334 | 0         | 12   | yes ||  33.4  |  29.8  |
; 10 | ?            | 25        | 100000   | -2040.816327 | 0         | 12   | no  ||  33.4  |  30.3  |
; 11 | 60x24x365    | 1/6% → ?  | 0        | -0.01        | ?→ FV     | =N   | yes ||  28.6  |  31    |
; 12 | 40           | ? → I%YR  | 900      | -400         | -1000 → ? | 1    | no  ||  Inf   |  23.7  |
;------------------------------------------------------------------------------------------------------

; FLAG 00  0 → Nothing   is returned (default)
;          1 → Something is returned. Used by N, I%YR, PV, PMT, FV, →AER
; FLAG 01  Used for temporary purposes 
; "p"      0 → End_Mode,   use TVM menu (which shows "START" & "END•")
;          1 → Begin_Mode, use MENU2    (which shows "STAR•" & "END")

; On a first run, Plus42 doesn't need FV entered to do #1, Duncan's program does. I changed that. 

; Plus42's menus stay at their level and only change via the up/down buttons. Different for :TVM
; Plus42 doesn't AVIEW anything when you do CLEAR, this program does.
; Plus42 uses BEGIN, :TVM uses START  ???
; Could we make a SHOW TVM so you can see ALL the 5 primary numbers? (only practical in Plus42)
; Made LOCAL variables for: den, num, k, y, f0, f, g, pv, fv, fpp, fp2, eps, a, b, c, d
; In Plus42, if you change modes then you can't recalculate a variable with one press. You can here :-) 

; Darn it - this will cause trouble, it also requires Free42 3.0...
; NOTE: In Free42 (but not in Plus42), Allow Big Stack (NSTK) mode must be turned on
;       in the Preferences in order to use the NSTK or LNSTK functions. If not, you
;       will get the Big Stack Disabled error message when trying to use them.

; Add in LOCK as a program step
; Many expensive DROP commands done vs judiciously using CLX
; Changed local labels for everything except the untouched I%YR stuff to uppercase A-F (local Alpha Labels)
; Changed my CONSTANTS program to use local Alpha Labels a-e
; "I%YR" is the only function that still uses LNSTK
; Fixed: PMT had a bug in the formula for START mode when i≠0
; There is no LBL "IYR?"  ???? What does it do?
; What does "→AER" do?
; Removed STO "RESET", "CLEAR", "START", "STAR•", "END" & "END•" because they are pointless,
; also removed (the original) FLAG 01 and merged everything into "p"
; Can I rename "p" to something else (unless it's already a standard variable name)
; This program clutters Free42 with global variables that may exist in other user programs :-( 
; Removed STO IND "var" & DROP before RTN in all MVAR routines that return a value
; Change Result VIEW to var→result vs var=result to distinguish it from an MVAR STO. Plus42 is super confusing. 

; ERROR HANDLING:
; Need to be robust against a consecutive press when all the necessary variables haven't been entered.
; Need to be robust against impossible solutions yielding an error.
; Should I fix the fact that this mangles LASTx?
; If the calculation for "I%YR" breaks you'll unexpectedly end up in NSTK mode :-( 
; Need to do more error checking e.g. for illegal non-real values 
; If you do a first run and stupidly just press "N" then you get "Nonexistent", however program 
; execution has stopped at the error so now even doing START or STOP is broken because the program pointer 
; is still in the same place that caused the error. Need a way to catch these silly errors.
; Plus42 gives you N=1 in this case. It also filters out N=0 as Invalid Data
; Filter for N not being an integer and <0, PV=FV (?), PMT=0 (?), existence of required variables per function,
; odd values in START and END (strictly speaking they shouldn't exist)

000▸LBL "TVM" ; primary menu (START, END•) to indicate END mode
001 MVAR "N"
002 MVAR "I%YR"
003 MVAR "PV"
004 MVAR "PMT"
005 MVAR "FV"
006 MVAR "CLEAR"
007 MVAR "P/YR"
008 MVAR "BEGIN"
009 MVAR "END•"
010 MVAR "RESET"
011 MVAR "IYR?"
012 MVAR "→AER"
013 GTO  G
014▸LBL "MENU2" ; second menu (BEGI•, END) to indicate begin mode
015 MVAR "N"
016 MVAR "I%YR"
017 MVAR "PV"
018 MVAR "PMT"
019 MVAR "FV"
020 MVAR "CLEAR"
021 MVAR "P/YR"
022 MVAR "BEGI•"
023 MVAR "END"
024 MVAR "RESET"
025 MVAR "IYR?"
026 MVAR "→AER"

027 LBL G
028 XEQ "RESET"    ; Main initialization. Does NOT clear all variables.
;---;-----------------------------
029▸LBL A          ; MAIN RUN LOOP (doesn't harm the stack)
;---;-----------------------------
030 XEQ "P"        ; run print subroutine
031 FC?C 00
032 AVIEW          ; Show the TVM state if a menu variable wasn't solved.
033 CLA
034 VARMENU "TVM"
035 0≠? "p"        ; select correct menu according to START or STOP mode
036 VARMENU "MENU2"
037 STOP 
;                  ; When a VARMENU key is pressed immediately following another, it 
;                  ; puts MVAR in the Alpha-register and does XEQ IND MVAR from here.
;                  ; In all other cases, it performs STO IND MVAR and a VIEW IND MVAR
;                  ; and doesn't advance the program pointer. This allows dumb things   
;                  ; like storing values in START or END without setting the mode :-( 
;---;-----------------------------
038 ASTO "var"     ; A consecutive press occurred, MVAR placed in X
039 XEQ IND "var"  ; XEQ the menu variable. X contains the result if a calculation was done.
040 FC? 00         ; Check if nothing was placed in X 
041 GTO A          ; Nothing was returned
042 STO IND "var"  ; Something was returned: save and view it
043 ├":"           ; Use ":" vs "=" to distinguish between MVAR store and MVAR result
044 ARCL ST X 
045 AVIEW
046 GTO A
;---;--------------------------------------------------------------------------------------------
047 LBL "P"        ; create alpha display
;---;--------------------------------------------------------------------------------------------
048 FUNC 00
049 "P/YR="        ; print alpha display. show #payments/year and start/end mode.
050 RCL "P/YR"     ; payments/year (and temporarily save X-register in "P/YR")
051 AIP            ; append the integer part of X to the alpha register 
052 0=? "p"
053 ├" END"
054 0≠? "p"
055 ├" BEGIN"
056 CLX
057 RTN

;---;--------------------------------------------------------------------------------------------
058▸LBL "RESET" ; TVM INITIALIZATION,  p=0 (END mode), FV=IYR?=RESET=0, P/YR=12
;   ; Leaves the stack untouched
;   ; Merged old LBL 01 and RESET
;   ; ??? I also changed this to do FV=0 (consistent with Plus42 I think)
;---;--------------------------------------------------------------------------------------------
059 FUNC 00
060 12
061 STO "P/YR"   ; Set Payments/Yr to 12
062 CLX
063 STO "FV"     ; Set FV=0
064 STO "IYR?"   ; Set IYR?=0
065 STO "p"
066 RTN
;---;--------------------------------------------------------------------------------------------
067▸LBL "CLEAR"  ; clear all variables and SF 00. Leaves the stack untouched
;---;--------------------------------------------------------------------------------------------
068 FUNC 00
069 0
070 STO "PV"
071 STO "PMT"
072 STO "FV"
073 STO "I%YR"
074 STO "IYR?"
075 STO "N"
076 RTN
;---;--------------------------------------------------------------------------------------------
077▸LBL "BEGIN"
078▸LBL "BEGI•"  ; Begin mode ("p"=1)
;---;--------------------------------------------------------------------------------------------
079 FUNC 00
080 1
081 STO "p"      ; save X-register
082 CLX
083 RTN
;---;--------------------------------------------------------------------------------------------
084▸LBL "END" 
085▸LBL "END•"   ; End mode ("p"=0)
;---;--------------------------------------------------------------------------------------------
086 FUNC 00
087 0
088 STO "p"      ; save X-register
089 CLX
090 RTN
;---;--------------------------------------------------------------------------------------------
091▸LBL "P/YR" ; ??? Why is this needed?
;---;--------------------------------------------------------------------------------------------
092 STO "P/YR"
093 RTN
;---;--------------------------------------------------------------------------------------------
094▸LBL "N"    ; Solve for N (for i=0 & i≠0) (+2)
;---;--------------------------------------------------------------------------------------------
095 FUNC 01
096 SF 00      ; To signify this routine returns an answer in X
097 CF 01      ; Do NOT calculate "F" (which requires "N") within XEQ I
098 XEQ I      ; creates "i" and leaves it in X 
099 X=0?
100 GTO B      ; <---- Calculate N(i=0)  -(PV+FV)/PMT
101 1/X        ; <---- Calculate N(i≠0)  -ln[(PMT*(p+1/i)+PV)/(PMT*(p+1/i)-FV)]/ln(1+i)
102 RCL+ "p"   ; Optimized the way this formula was calculated
103 RCL× "PMT"
104 ENTER
105 RCL+ "PV"
106 X<>Y
107 RCL- "FV"
108 ÷
109 LN
110 RCL "i"
111 LN1+X
112 ÷
113 +/-
114 RTN
115▸LBL B      ; <---- Calculate N(i=0)
116 RCL "PV"
117 RCL+ "FV"
118 +/-
119 RCL÷ "PMT" ; This is the calculated value of N
120 RTN
;---;--------------------------------------------------------------------------------------------
121▸LBL "PV"   ; Solve for PV (for i=0 & i≠0)
;---;--------------------------------------------------------------------------------------------
122 FUNC 01
123 SF 00      ; To signify this routine returns an answer in X
124 SF 01      ; Calculate "F" within XEQ I
125 XEQ I      ; creates "i" & "F" and leaves "i" in X 
126 X=0?
127 GTO C      ; <---- Calculate PV(i=0)   -(FV+PMT*N)
128 1/X        ; <---- Calculate PV(i≠0)   [PMT*(p+1/i)*(1-F)-FV]/F
129 RCL+ "p"   ; Optimized the way this formula was calculated
130 RCL× "PMT"
131 1
132 RCL- "F"
133 ×
134 RCL- "FV"
135 RCL÷ "F"
136 RTN
137▸LBL C      ; <---- Calculate PV(i=0)
138 RCL "PMT"
139 RCL× "N"
140 RCL+ "FV"
141 +/-
142 RTN
;---;--------------------------------------------------------------------------------------------
143▸LBL "FV"   ; Solve for FV (for i=0 & i≠0)
;---;--------------------------------------------------------------------------------------------
144 FUNC 01
145 SF 00      ; To signify this routine returns an answer in X
146 SF 01      ; Calculate "F" within XEQ I
147 XEQ I      ; creates "i" & "F" and leaves "i" in X 
148 X=0?
149 GTO D      ; <---- Calculate FV(i=0)   -(PV+PMT*N)
150 1/X        ; <---- Calculate FV(i≠0)   PMT*(p+1/i)*(1-F)-PV*F    merged XEQ 22
151 RCL+ "p"   ; Optimized the way this formula was calculated
152 RCL× "PMT"
153 1
154 RCL- "F"
155 ×
156 RCL "PV"
157 RCL× "F"
158 -
159 RTN
160▸LBL D      ; <---- Calculate FV(i=0)
161 RCL "PMT"
162 RCL× "N"
163 RCL+ "PV"
164 +/-
165 RTN
;---;--------------------------------------------------------------------------------------------
166▸LBL "PMT"  ; Solve for PMT (for i=0 & i≠0)
;---;--------------------------------------------------------------------------------------------
167 FUNC 01
168 SF 00      ; To signify this routine returns an answer in X
169 SF 01      ; Calculate "F" within XEQ I
170 XEQ I      ; creates "i" & "F" and leaves "i" in X 
171 X=0?
172 GTO E      ; <---- Calculate PMT(i=0)   (FV-PV)/N
173 1/X        ; <---- Calculate PMT(i≠0)   (PV*F+FV)/(p+1/i)/(1-F)   merged LBL 19
174 RCL+ "p"   ; Optimized the way this formula was calculated
175 1
176 RCL- "F"
177 ×
178 RCL "PV"
179 RCL× "F"
180 RCL+ "FV"
181 X<>Y
182 ÷
183 RTN
184▸LBL E      ; <---- Calculate PMT(i=0)
185 RCL "FV"
186 RCL- "PV"
187 RCL÷ "N"
188 RTN
;---;--------------------------------------------------------------------------------------------
189▸LBL "→AER" ;  Calculates 100*((1+i)^"P/YR"-1)
;---;--------------------------------------------------------------------------------------------
190 FUNC 01
191 SF 00      ; To signify this routine returns an answer in X
192 CF 01      ; Do NOT calculate "F" (which requires "N") within XEQ I
193 XEQ I      ; Went this route vs calculating "i" in-place
194 1
195 +
196 RCL "P/YR"
197 Y↑X
198 1
199 -
200 100
201 ×
202 RTN
;---;--------------------------------------------------------------------------------------------
203▸LBL I   ; Calculates i = "I%YR"/100/"P/YR" and (optionally) F = (1+i)^N
;   ;       ; (+2), Returns with "i" in X) Called by N, FV, PV, PMT, →AER
;---;--------------------------------------------------------------------------------------------
204 RCL "P/YR"
205 1/X
206 RCL "I%YR"
207 %
208 STO "i"    ; i = "I%YR"/100/"P/YR"
209 FC? 01     ; Need to catch if "N" is defined for the RCL× "N" below
210 RTN
211 LN1+X
212 RCL× "N"   ; ??? BUG if calculating N, FV, PV or PMT when "N" isn't defined yet! 1st time run 
213 E↑X
214 STO "F"    ; F = e^(N*ln(1+i))  <---- ??? isn't this just (1+i)^N
215 RCL "i"    ; ??? Changed this to return "i" vs "I%YR"
216 RTN
;---;--------------------------------------------------------------------------------------------
217▸LBL "I%YR" ;  (for Begin_mode & End_mode) Consumes LBLs 24-5, 41-2, 30-7
;---; Holy cow this is unbelievably complex! Consumes 10 local labels.
;---;--------------------------------------------------------------------------------------------
218 FUNC 01
219 LNSTK
220 SF 00      ; To signify this routine returns an answer in X
221 0=? "p"    ; (removed RCL "p", X=0?)
222 GTO 07     ; End mode
223 RCL "PV"   ; <---- Calculate I%YR(Begin_mode)
224 RCL+ "PMT"
225 LSTO "pv"   ; pv = PV+PMT
226 RCL "FV"
227 RCL- "PMT"
228 LSTO "fv"   ; fv = FV-PMT
229 GTO 08
;---;-----------------------
230▸LBL 07     ; <---- Calculate I%YR(End_mode) - simply copy values
;---;-----------------------
231 RCL "FV"
232 LSTO "fv"
233 RCL "PV"
234 LSTO "pv"
;---;-----------------------
235▸LBL 08     ; referenced by 239
;---;-----------------------
236 RCL "IYR?" ; needed to return this or else the guess isn't used
237 X=0?
238 XEQ 29     ; if not, run interest rate guess
239 STO "I%YR" ; starting interest rate,  ??? another redundant calculation of "i"
240 RCL "P/YR"
241 1/X
242 %
243 STO "i"    ; starting i = "I%YR"/100/"P/YR"
244 CLX 
245 2
246 LSTO "g"    ; force at least 2 cycles of the loop
247 CLX
248 LSTO "f"
249 CLX        ; used to be DROP
;---;-----------------------
250▸LBL 09     ; start of Newton solve (adapted from plus42).
;              ; (+3) Spans LBLs 30-37. referenced by 380, 386, 400
;---;-----------------------
251 RCL "f"
252 LSTO "eps"
253 LSTO "f0"
254 CLX
;---;-----------------------
256 RCL "i"    ; check for very tiny i
257 X↑2
258 RCL× "N"
259 1
260 +
261 1
262 X=Y?
263 GTO 38     ; if so switch to secant method
264 DROPN 2
;---;-----------------------
265 RCL "i"    ; check for quite tiny i
266 X↑2
267 RCL× "N"
268 1ᴇ10
269 ÷
270 1
271 +
272 1
273 X=Y?
274 GTO 17     ; if so switch to quadratic method
263 DROPN 2
;---;-----------------------
;              ; the newton method
;---;-----------------------
264 RCL "i"
265 LN1+X
266 RCL× "N"
267 E↑X-1
268 RCL "i"
269 X<>Y
270 ÷
271 DUP
272 RCL "N"
273 ×
274 1
275 -
276 LSTO "y"
277 DROP
278 RCL "pv"
279 RCL+ "fv"
280 ×
281 LSTO "k"
282 RCL "pv"
283 RCL× "i"
284 +
285 RCL+ "PMT"
286 LSTO "f"
287 DROP
288 RCL "N"
289 1
290 -
291 RCL× "i"
292 RCL+ "y"
293 LSTO "num"
294 DROP
295 RCL "i"
296 ENTER
297 ×
298 RCL+ "i"
299 LSTO "den"  ; ??? only used 3 & 7 lines later (use the stack)
300 DROP
301 RCL "f"
302 RCL× "den"
303 RCL "k"
304 RCL× "num"
305 RCL "pv"
306 RCL× "den"
307 -
308 ÷
309 LSTO "eps"
310 RCL+ "i"
311 STO "i"
312 DROP
313 GTO 18     ; check success of iteration
;---;-----------------------
314▸LBL 17     ; the quadratic method. (+1) referenced by 271
;---;-----------------------
328 DROPN 2
329 RCL "pv"
330 RCL+ "fv"
331 RCL "N"
332 RCL× "PMT"
333 +
334 RCL÷ "N"
335 LSTO "f"
336 RCL- "PMT"
337 LSTO "a"
338 DROP
339 RCL "N"
340 X↑2
341 1
342 -
343 RCL× "a"
344 6
345 ÷
346 RCL× "i"
347 LSTO "b"
348 DROP
349 RCL "pv"
350 RCL- "fv"
351 RCL+ "a"
352 2
353 ÷
354 RCL+ "b"
355 STO "fp"
356 DROP
357 RCL "fp"
358 RCL "b"
359 2
360 ÷
361 -
362 RCL× "i"
363 RCL+ "f"
364 LSTO "f"
365 DROP
366 RCL "f"
367 +/-
368 RCL÷ "fp"
369 LSTO "eps"
370 RCL+ "i"
371 LSTO "i"
372 DROP
373 GTO 18      ; check success of iteration
;---;-----------------------
374▸LBL 38      ; the secant method
;---;-----------------------
375 STOP
376 DROPN 2
377 RCL "pv"
378 RCL+ "fv"
379 RCL÷ "N"
380 LSTO "a"
381 DROP
382 RCL "pv"
383 RCL- "fv"
384 LSTO "b"
385 DROP
386 RCL "a"
387 RCL+ "b"
388 2
389 ÷
390 STO "fp"
391 DROP
392 RCL "N"
393 ENTER
394 ×
395 1
396 -
397 RCL× "a"
398 6
399 ÷
400 LSTO "fpp"
401 DROP
402 RCL "fp"
403 RCL× "i"
404 RCL+ "PMT"
405 RCL+ "a"
406 LSTO "f"
407 DROP
408 RCL "fpp"
409 RCL× "i"
410 RCL+ "fp"
411 LSTO "fp2"
412 DROP
413 RCL "f"
414 +/-
415 RCL÷ "fp2"
416 LSTO "eps"
417 RCL+ "i"
418 STO "i"
419 DROP
;---;-----------------------
359▸LBL 18     ; (+2) referenced by 322
;---;-----------------------
360 RCL "g"    ; forces at least two cycles of loop
361 X>0?
362 GTO 19
363 DROP       ; this used to be GTO 35 which was only called from here so I merged it
364 RCL "f0"
365 ABS
366 RCL "f"
367 ABS
368 X≥Y?       ; is guess worsening or same?
369 GTO 27
370 DROPN 2
371 GTO 09     ; return to start, going to 30 with nothing on the stack
;---;-----------------------
372▸LBL 19     ; Decrement "g" and GTO 09 (+1) referenced by 371  ??? there has to be a way to do DSE "g"
;---;-----------------------
373 1
374 -
375 LSTO "g"
376 DROP
377 GTO 09     ; going to 30 with nothing on the stack
;---;-----------------------
378▸LBL 27     ; referenced by 378
;---;-----------------------
379 DROPN 2
380 RCL "eps"
381 1000
382 ÷
383 RCL "i"
384 X<>Y
385 -
386 RCL "i"
387 X=Y?       ; break if good guess
388 GTO 28
389 DROPN 2    ; merged in LBL 38
390 RCL "i"
391 GTO 09     ; going to 30 with an item on the stack  ???? (as opposed to LBL 32,34)
;---;-----------------------
392▸LBL 28     ; referenced by 397
;---;-----------------------
393 DROPN 3
394 RCL "eps"
395 2
396 ÷
397 RCL "i"
398 X<>Y
399 -           ; last improvement to i solve post break.
400 RCL× "P/YR" ; i -> I%YR
401 100
402 ×
403 RTN
;---;-----------------------
404▸LBL 29     ; initial interest rate guess (via Albert Chan's code). Contains LBL 25. referenced by 247
;              ; Takes no inputs, returns a guess for I%YR
;---;-----------------------
405 RCL "fv"
406 RCL+ "pv"
407 RCL÷ "N"
408 LSTO "a"    ; a = (fv+pv)/N
409 RCL "fv"
410 RCL- "pv"
411 X<>Y
412 -
413 LSTO "b"    ; b = (fv-pv) - (fv+pv)/N
414 DROP
415 RCL "PMT"
416 RCL+ "a"
417 RCL÷ "b"
418 LSTO "c"    ; c = PMT+a+b   ??? only used once 9 lines later (use the stack)
419 RCL "N"
420 X↑2
421 RCL× "a"
422 ×
423 RCL÷ "b"
424 LSTO "d"    ; d = a/b*N^2   ??? only used once 4 lines later (use the stack)
425 3
426 -
427 RCL× "c"
428 RCL "d"
429 1.5
430 -
431 ÷
432 RCL× "P/YR" ; guess = "P/YR"*c*(d-3)/(d-1.5)     (one item added to the stack)
433 100
434 ×           ; guess = 100*"P/YR"*c*(d-3)/(d-1.5)     (one item added to the stack)
435 X>=0?       ; if guess is positive then return 
436 RTN
437 RCL "fv"    ; back up i guess (edge guess). referenced by 506 (was LBL 25)
438 RCL "pv"
439 ×           ; 2 items on the stack at this point
440 X≠0?        ; fv*pv = 0?
441 GTO 37
442 DROP 
443 RTN
444 LBL 37
445 DROPN 2     ; Y-register no longer needed.  
446 RCL "PMT"
447 RCL÷ "fv"
448 RCL "PMT"
449 +/-
450 RCL÷ "pv"
451 X>Y?        ; this can get cleaned up
452 X<>Y
453 CLX
454 100
455 ×
456 RTN
457 END
